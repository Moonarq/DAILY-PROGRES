name: Auto Commit Daily (15 commits)

on:
  schedule:
    - cron: '0 6 * * *'  # Start setiap hari jam 06:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  auto-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "your-email@example.com"

      - name: Generate 15 Random Commits
        run: |
          # Pesan commit
          MESSAGES=("Update notes" "Add new example" "Improve documentation" "Refactor code" "Learning log update" "Fix typo" "Enhance structure" "Minor changes" "Add snippet" "Update readme")

          # File yang diupdate
          FILES=("notes/laravel.md" "notes/react.md" "notes/git.md" "notes/js.md")

          COMMITS=15

          # Delay awal (0–30 menit)
          START_DELAY=$(( RANDOM % 1800 ))
          echo "Initial random delay: $START_DELAY seconds..."
          sleep $START_DELAY

          for ((i=1;i<=COMMITS;i++)); do
            MSG=${MESSAGES[$RANDOM % ${#MESSAGES[@]}]}
            FILE=${FILES[$RANDOM % ${#FILES[@]}]}
            mkdir -p notes
            echo "$(date): $MSG" >> $FILE
            git add $FILE
            git commit -m "$MSG"
            echo "Commit $i/$COMMITS: $MSG"

            # Push setiap 5 commit agar real-time
            if (( i % 5 == 0 )); then
              echo "Pushing after $i commits..."
              git pull origin ${{ github.ref_name }} --rebase || true
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
              git push origin HEAD:${{ github.ref_name }}
            fi

            # Delay antar commit (2–5 menit)
            if [ $i -lt $COMMITS ]; then
              SLEEP=$(( ( RANDOM % 180 ) + 120 ))
              echo "Sleeping for $SLEEP seconds..."
              sleep $SLEEP
            fi
          done

      - name: Final Push
        run: |
          git pull origin ${{ github.ref_name }} --rebase || true
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:${{ github.ref_name }}
